<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="WrathModdingHelper.Libraries" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<LangVersion>latest</LangVersion>
		<TargetFramework>net472</TargetFramework>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>


	<ItemGroup>
		<Compile Remove="lib\**" />
		<EmbeddedResource Remove="lib\**" />
		<None Remove="lib\**" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="AssemblyPublicizer" Version="1.0.1">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
<# if (MergeAssemblies.Any())
{
#>
		<PackageReference Include="ILRepack.MSBuild.Task" Version="2.0.13" />
<#
}
#>
<# foreach (NugetPackage pkg in NugetPackages)
{
#>
		<PackageReference Include="<#= pkg.Name #>" Version="<#= pkg.Version #>" />
<#
}
#>
	</ItemGroup>

	<ItemGroup>
		<!-- Main Wrath Assembly, Publicized -->
		<Reference Include="Assembly-CSharp">
			<HintPath>$(ProjectDir)lib\Assembly-CSharp.dll</HintPath>
		</Reference>
		
		<!-- Wrath Assemblies -->
		<Reference Include="Assembly-CSharp-firstpass.dll">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\Assembly-CSharp-firstpass.dll</HintPath>
		</Reference>
		<Reference Include="Owlcat.Runtime.Core">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.Core.dll</HintPath>
		</Reference>
		<Reference Include="Owlcat.Runtime.UI">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.UI.dll</HintPath>
		</Reference>
		<Reference Include="Owlcat.Runtime.Validation">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.Validation.dll</HintPath>
		</Reference>
		<Reference Include="Owlcat.Runtime.Visual">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\Owlcat.Runtime.Visual.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.CoreModule">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
		</Reference>
		
		<!-- Harmony & UMM -->
		<Reference Include="0Harmony">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\UnityModManager\0Harmony.dll</HintPath>
		</Reference>
		<Reference Include="UnityModManager">
			<HintPath>$(WrathPath)\Wrath_Data\Managed\UnityModManager\UnityModManager.dll</HintPath>
		</Reference>
	</ItemGroup>
	
	<ItemGroup>
	  <None Update="Info.json">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<!-- Generates Assembly-CSharp_public.dll -->
	<Target Name="Publicize" AfterTargets="Clean">
		<ItemGroup>
			<Assemblies Include="$(WrathPath)\Wrath_Data\Managed\Assembly-CSharp.dll" />
			<PublicAssembly Include="$(ProjectDir)lib\Assembly-CSharp_public.dll" />
			<RenamedAssembly Include="$(ProjectDir)lib\Assembly-CSharp.dll" />
		</ItemGroup>

		<PublicizeTask InputAssemblies="@(Assemblies)" OutputDir="$(ProjectDir)lib/" />
		<!-- ILRepack requires the assembly name match the reference so remove _public -->
		<Move SourceFiles="@(PublicAssembly)" DestinationFiles="@(RenamedAssembly)" />
	</Target>

<#= InjectedFragments #>

<# if (MergeAssemblies.Any())
{
#>
	<Target Name="ILRepack" AfterTargets="Build">
		<ItemGroup>
			<InputAssemblies Include="$(AssemblyName).dll" />
<# foreach (string asm in MergeAssemblies)
{
#>
			<InputAssemblies Include="<#= asm #>" />
<#
}
#>
			<OutputAssembly Include="$(AssemblyName).dll" />
		</ItemGroup>

		<Message Text="Merging: @(InputAssemblies) into @(OutputAssembly)" Importance="High" />

		<ILRepack OutputType="Dll" MainAssembly="@(OutputAssembly)" OutputAssembly="@(OutputAssembly)" InputAssemblies="@(InputAssemblies)" WorkingDirectory="$(OutputPath)" />
	</Target>
<#
}
#>

	<!-- Automatically deploys the mod on build -->
	<Target Name="Deploy" AfterTargets="<#= PreDeployTarget #>">
		<ItemGroup>
			<Assembly Include="$(OutputPath)\$(AssemblyName).dll" />
			<ModConfig Include="$(OutputPath)\Info.json" />
		</ItemGroup>

		<Copy SourceFiles="@(Assembly)" DestinationFolder="$(WrathPath)\Mods\$(MSBuildProjectName)" />
		<Copy SourceFiles="@(ModConfig)" DestinationFolder="$(WrathPath)\Mods\$(MSBuildProjectName)" />
	</Target>

</Project>

